FAIL ./hiker.test.js
  Testing the close to zero function
    ✕ get the closest value for 2 positive value (6 ms)
    ✕ get the closest value for 3 positive value
    ✕ get the closest value for 2 positive value and 1 negative value (1 ms)
    ✕ get the closest value for 2 positive value and 1 negative value (1 ms)
    ✕ get the closest value for 2 positive value and 1 negative value with a tie (1 ms)

  ● Testing the close to zero function › get the closest value for 2 positive value

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: undefined

       6 |   it('get the closest value for 2 positive value', () => {
       7 |     
    >  8 |     expect(closestToZero([2,1])).toEqual(1);
         |                                  ^
       9 |   });
      10 |   it('get the closest value for 3 positive value', () => {
      11 |     

      at Object.<anonymous> (hiker.test.js:8:34)

  ● Testing the close to zero function › get the closest value for 3 positive value

    expect(received).toEqual(expected) // deep equality

    Expected: 2
    Received: undefined

      10 |   it('get the closest value for 3 positive value', () => {
      11 |     
    > 12 |     expect(closestToZero([7,2,9])).toEqual(2);
         |                                    ^
      13 |   });
      14 |  
      15 |   it('get the closest value for 2 positive value and 1 negative value', () => {

      at Object.<anonymous> (hiker.test.js:12:36)

  ● Testing the close to zero function › get the closest value for 2 positive value and 1 negative value

    expect(received).toEqual(expected) // deep equality

    Expected: 2
    Received: undefined

      15 |   it('get the closest value for 2 positive value and 1 negative value', () => {
      16 |     
    > 17 |     expect(closestToZero([-7,2,9])).toEqual(2);
         |                                     ^
      18 |   });
      19 |   
      20 |   it('get the closest value for 2 positive value and 1 negative value', () => {

      at Object.<anonymous> (hiker.test.js:17:37)

  ● Testing the close to zero function › get the closest value for 2 positive value and 1 negative value

    expect(received).toEqual(expected) // deep equality

    Expected: -2
    Received: undefined

      20 |   it('get the closest value for 2 positive value and 1 negative value', () => {
      21 |     
    > 22 |     expect(closestToZero([-7,-2,9])).toEqual(-2);
         |                                      ^
      23 |   });
      24 |   
      25 |   it('get the closest value for 2 positive value and 1 negative value with a tie', () => {

      at Object.<anonymous> (hiker.test.js:22:38)

  ● Testing the close to zero function › get the closest value for 2 positive value and 1 negative value with a tie

    expect(received).toEqual(expected) // deep equality

    Expected: 2
    Received: undefined

      25 |   it('get the closest value for 2 positive value and 1 negative value with a tie', () => {
      26 |     
    > 27 |     expect(closestToZero([-7,-2,2])).toEqual(2);
         |                                      ^
      28 |   });
      29 | });
      30 | 

      at Object.<anonymous> (hiker.test.js:27:38)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 5 total
Snapshots:   0 total
Time:        1.557 s
Ran all test suites.
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! @ test: `jest --coverage`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the @ test script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/sandbox/.npm/_logs/2022-09-08T19_16_34_491Z-debug.log
